name: Pipeline

on:
    push:
        branches: ["main"]
        paths:
            - ".config/**"
            - ".github/workflows/**"
            - "bin/**"
            - ".bashrc"
            - ".stow-local-ignore"
    workflow_dispatch:

jobs:
    trigger-event:
        name: Dispatch build event
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              name: Checkout repository
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0
                  submodules: true

            - name: Update submodules to latest
              run: |
                git submodule update --init --recursive
                git submodule update --remote --recursive

            - uses: stefanzweifel/git-auto-commit-action@v5
              name: Commit updated submodules
              env:
                GITHUB_TOKEN: ${{ secrets.REPOSITORY_WORKFLOW_TOKEN }}
              with:
                commit_message: Update to latest
                commit_user_name: cyrus01337
                commit_user_email: ${{ secrets.COMMIT_USER_EMAIL }}

            - name: Parse short commit hash
              run: |
                SHORT_COMMIT_HASH="$(git rev-parse --short HEAD)"

                echo "SHORT_COMMIT_HASH=$SHORT_COMMIT_HASH" >> "$GITHUB_ENV"

            - name: Dispatch build event to cyrus01337/shell-devcontainer
              env:
                REPOSITORY_WORKFLOW_TOKEN: ${{ secrets.REPOSITORY_WORKFLOW_TOKEN }}
              run: |
                status_code=$(
                    curl -L \
                        -X POST \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer $REPOSITORY_WORKFLOW_TOKEN" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        https://api.github.com/repos/cyrus01337/shell-devcontainer/dispatches \
                        -d '{"event_type":"Handle build request (dotfiles-but-better@${{ env.SHORT_COMMIT_HASH }})"}' \
                        | jq ".status" \
                        | sed -E 's/"(.+)"/\1/'
                )

                if [[ $status_code ]]; then
                    echo "Request status code: $status_code..."

                   exit 1
                fi
