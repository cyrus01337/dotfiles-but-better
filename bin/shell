#!/usr/bin/env bash
set -e

if ! which docker &> /dev/null; then
    echo "Must have Docker installed"

    exit 1
fi

DOCKER_IMAGE_NAME="cyrus01337/neovim-devcontainer"
DOCKER_IMAGE_TAG="latest"
DOCKER_IMAGE="${DOCKER_IMAGE_NAME:-cyrus01337/neovim-devcontainer}:${DOCKER_IMAGE_TAG:-latest}"
CONTAINER_NAME="shell"
CONTAINER_COMMAND="fish"
GTK_PASSTHROUGH="-v $HOME/.Xauthority:/home/developer/.Xauthority:rw"

git_credentials_mount=""

get_current_docker_image_repo_digest_hash() {
    echo $(
        docker inspect $DOCKER_IMAGE --format "{{json .RepoDigests}}" \
            | jq -r ".[0]" \
            | sed -E "s/^.+@(.+)/\1/"
    )
}

get_latest_docker_image_repo_digest_hash() {
    echo $(
        docker buildx imagetools inspect $DOCKER_IMAGE --format "{{json .Manifest}}" \
            | jq -r .digest
    )
}

if [[ $DOCKER_IMAGE_NAME != "test" ]]; then
    current_docker_image_repo_digest_hash=$(get_current_docker_image_repo_digest_hash)
    latest_docker_image_repo_digest_hash=$(get_latest_docker_image_repo_digest_hash)

    echo "Current Docker image repo digest hash: $current_docker_image_repo_digest_hash"
    echo -e " Latest Docker image repo digest hash: $latest_docker_image_repo_digest_hash\n"

    if [[ $latest_docker_image_repo_digest_hash != $current_docker_image_repo_digest_hash ]]; then
        docker pull $DOCKER_IMAGE
    fi

    if [[ $(docker ps -q --filter "name=$CONTAINER_NAME") ]]; then
        docker rm -f $CONTAINER_NAME 1> /dev/null
    fi
fi

if [[ $(docker ps -aq --filter "name=$CONTAINER_NAME") ]]; then
    docker start $CONTAINER_NAME 1> /dev/null
else
    docker run \
        -d \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $HOME:/home/developer:rw \
        -v $HOME/.config:/home/developer/.config \
        -v local-data:/home/developer/.local:rw \
        -v $PWD:/workspace:rw \
        $GTK_PASSTHROUGH \
        $git_credentials_mount \
        --network=host \
        --name $CONTAINER_NAME \
        $DOCKER_IMAGE \
        1> /dev/null
fi

docker exec -it $CONTAINER_NAME $CONTAINER_COMMAND
