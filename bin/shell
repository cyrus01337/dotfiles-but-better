#!/usr/bin/env bash
if ! which docker &> /dev/null; then
    echo "Must have Docker installed"

    exit 1
fi

DOCKER_IMAGE_NAME="cyrus01337/neovim-devcontainer"
DOCKER_IMAGE_TAG="latest"
DOCKER_IMAGE="$DOCKER_IMAGE_NAME:${DOCKER_IMAGE_TAG:-latest}"
CONTAINER_NAME="shell"
CONTAINER_COMMAND="fish"
git_related_volume_binds=()

get_current_docker_image_repo_digest_hash() {
    echo $(
        docker inspect $DOCKER_IMAGE --format "{{json .RepoDigests}}" \
        | jq -r ".[0]" \
        | sed -E "s/^.+@(.+)/\1/"
    )
}

get_latest_docker_image_repo_digest_hash() {
    echo $(
        docker buildx imagetools inspect $DOCKER_IMAGE --format "{{json .Manifest}}" \
        | jq -r .digest
    )
}

if [[ -f $HOME/.gitconfig ]]; then
    git_related_volume_binds+=("-v $HOME/.gitconfig:/home/developer/.gitconfig")
fi

if [[ -f $HOME/.git-credentials ]]; then
    git_related_volume_binds+=("-v $HOME/.git-credentials:/home/developer/.git-credentials")
fi

current_docker_image_repo_digest_hash=$(get_current_docker_image_repo_digest_hash)
latest_docker_image_repo_digest_hash=$(get_latest_docker_image_repo_digest_hash)

echo "Current Docker image repo digest hash: $current_docker_image_repo_digest_hash"
echo -e " Latest Docker image repo digest hash: $latest_docker_image_repo_digest_hash\n"

if [[ $latest_docker_image_repo_digest_hash != $current_docker_image_repo_digest_hash ]]; then
    if [[ $(docker ps -q --filter "name=$CONTAINER_NAME") ]]; then
        docker stop $CONTAINER_NAME
        docker rm $CONTAINER_NAME
    fi

    docker pull $DOCKER_IMAGE
fi

if [[ $(docker ps -aq --filter "name=$CONTAINER_NAME") ]]; then
    docker start $CONTAINER_NAME 1> /dev/null
else
    docker run \
        -d \
        ${git_related_volume_binds[@]} \
        -v $PWD:/workspace \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v fish-data:/home/developer/.local/share/fish \
        -v neovim-data:/home/developer/.local/share/nvim \
        --name $CONTAINER_NAME \
        $DOCKER_IMAGE \
        1> /dev/null
fi

docker exec -it $CONTAINER_NAME $CONTAINER_COMMAND
